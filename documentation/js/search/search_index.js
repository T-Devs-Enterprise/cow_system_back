var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AdminModule.html",[0,0.5,1,1.753]],["body/modules/AdminModule.html",[0,0.547,1,2.291,2,0.667,3,0.254,4,0.219,5,0.219,6,1.637,7,0.558,8,0.036,9,0.456,10,2.813,11,2.283,12,2.813,13,2.813,14,3.356,15,1.894,16,2.283,17,1.894,18,0.748,19,1.293,20,2.148,21,2.283,22,2.291,23,2.432,24,1.894,25,1.894,26,1.293,27,2.813,28,1.731,29,3.715,30,3.356,31,3.212,32,2.432,33,3.715,34,2.148,35,2.813,36,1.302,37,2.813,38,1.894,39,2.813,40,1.894,41,1.894,42,1.637,43,1.894,44,1.894,45,1.894,46,1.894,47,1.302,48,1.894,49,2.432,50,1.894,51,1.894,52,1.894,53,0.876,54,1.894,55,1.894,56,2.291,57,1.894,58,1.894,59,1.165,60,0.961,61,2.283,62,1.637,63,2.283,64,2.283,65,2.283,66,2.283,67,0.254,68,0.066,69,0.019,70,0.019]],["title/modules/AnimalsModule.html",[0,0.5,71,1.753]],["body/modules/AnimalsModule.html",[0,0.853,2,1.288,3,0.49,4,0.423,5,0.423,7,0.49,8,0.034,9,0.88,67,0.49,68,0.128,69,0.03,70,0.03,71,2.992,72,4.408]],["title/controllers/AppController.html",[73,1.961,74,1.961]],["body/controllers/AppController.html",[3,0.416,4,0.359,5,0.359,7,0.531,8,0.035,9,0.747,36,1.437,67,0.416,68,0.109,69,0.027,70,0.027,73,3.023,74,3.023,75,3.104,76,3.104,77,0.825,78,2.209,79,4.593,80,1.732,81,1.094,82,3.743,83,1.732,84,1.528,85,2.684,86,3.104,87,2.684,88,1.911,89,3.743]],["title/modules/AppModule.html",[0,0.5,90,1.961]],["body/modules/AppModule.html",[0,0.669,2,0.884,3,0.337,4,0.291,5,0.291,7,0.613,8,0.035,9,0.604,60,1.746,67,0.337,68,0.088,69,0.023,70,0.023,71,3.12,74,2.997,75,3.441,85,2.813,86,2.51,90,3.801,91,1.92,92,2.51,93,2.51,94,2.51,95,2.813,96,2.813,97,2.349,98,1.714,99,1.714,100,3.026,101,2.975,102,3.026,103,3.026,104,3.026,105,3.026]],["title/injectables/AppService.html",[85,1.581,106,0.991]],["body/injectables/AppService.html",[3,0.441,4,0.38,5,0.38,7,0.441,8,0.034,9,0.791,36,1.521,67,0.441,68,0.115,69,0.028,70,0.028,77,0.873,78,2.29,79,4.689,81,1.158,83,1.833,84,1.584,85,2.527,106,1.584,107,2.023,108,3.286,109,3.962,110,3.962,111,3.962]],["title/modules/AuthModule.html",[0,0.5,112,1.753]],["body/modules/AuthModule.html",[0,0.607,2,0.769,3,0.292,4,0.253,5,0.253,7,0.617,8,0.035,9,0.525,60,1.583,62,1.886,67,0.292,68,0.076,69,0.021,70,0.021,91,1.74,96,1.92,97,2.129,98,1.489,99,1.489,101,2.696,112,3.283,113,2.182,114,2.182,115,2.182,116,2.182,117,2.438,118,2.71,119,2.983,120,2.63,121,2.696,122,3.119,123,3.434,124,1.489,125,2.63,126,1.886,127,2.63,128,1.666,129,2.63,130,2.182,131,2.182,132,2.63,133,2.63,134,2.63,135,1.886,136,2.63,137,2.63,138,2.182,139,2.63,140,2.63,141,2.63,142,1.886]],["title/injectables/AuthService.html",[106,0.991,118,1.433]],["body/injectables/AuthService.html",[3,0.241,4,0.208,5,0.208,7,0.547,8,0.035,9,0.433,18,1.226,19,1.229,20,2.067,22,2.473,28,2.229,34,2.485,36,1.797,47,1.797,49,1.556,67,0.241,68,0.063,69,0.018,70,0.018,77,0.478,78,1.511,81,1.147,83,1.511,84,1.681,88,1.108,106,1.045,107,1.108,118,1.511,122,1.8,126,1.556,142,1.556,143,1.8,144,3.265,145,3.265,146,1.849,147,1.556,148,2.149,149,5.105,150,2.17,151,2.223,152,2.223,153,1.046,154,2.223,155,3.265,156,2.17,157,2.004,158,3.265,159,2.17,160,1.511,161,2.485,162,1.8,163,1.556,164,1.556,165,2.17,166,2.341,167,1.8,168,3.265,169,3.925,170,3.265,171,3.925,172,2.17,173,1.8,174,2.17,175,1.8,176,2.17]],["title/modules/CommonModule.html",[0,0.5,95,1.581]],["body/modules/CommonModule.html",[0,0.59,1,3.292,2,0.74,3,0.282,4,0.243,5,0.243,7,0.578,8,0.035,9,0.505,60,1.54,67,0.282,68,0.074,69,0.021,70,0.021,91,1.693,95,3.103,97,2.072,98,1.434,99,1.434,112,3.292,117,2.69,121,2.624,130,2.1,177,2.1,178,2.1,179,2.1,180,3.292,181,3.292,182,2.532,183,2.532,184,2.532,185,2.532,186,2.532]],["title/modules/ConfigModule.html",[0,0.5,117,1.433]],["body/modules/ConfigModule.html",[0,0.812,2,1.19,3,0.453,4,0.391,5,0.391,7,0.56,8,0.035,9,0.812,56,2.305,60,1.714,67,0.453,68,0.118,69,0.028,70,0.028,117,2.528,124,2.305,187,4.07,188,4.07,189,4.07,190,4.07]],["title/classes/CreateUserInput.html",[68,0.09,191,1.581]],["body/classes/CreateUserInput.html",[3,0.371,4,0.321,5,0.321,7,0.371,8,0.035,18,1.168,47,2.117,53,1.701,67,0.371,68,0.097,69,0.025,70,0.025,77,0.736,80,2.051,81,1.295,84,1.815,153,1.181,160,2.553,191,2.263,192,1.705,193,4.127,194,2.115,195,2.807,196,2.706,197,2.77,198,3.339,199,3.179,200,2.818,201,1.406]],["title/modules/DatabaseModule.html",[0,0.5,180,1.753]],["body/modules/DatabaseModule.html",[0,0.72,2,0.985,3,0.375,4,0.324,5,0.324,7,0.592,8,0.035,9,0.672,13,2.795,18,0.983,19,1.908,47,1.293,56,1.908,59,1.72,60,1.877,62,2.416,67,0.375,68,0.098,69,0.025,70,0.025,117,2.063,123,3.815,124,1.908,142,2.416,153,0.898,180,2.525,202,3.369,203,2.795,204,2.134,205,3.369,206,3.369,207,3.369,208,3.369,209,3.369,210,3.369,211,3.369,212,3.369,213,3.369,214,3.369,215,2.416,216,3.369,217,3.369,218,2.795,219,3.369]],["title/modules/GraphqlModule.html",[0,0.5,181,1.753]],["body/modules/GraphqlModule.html",[0,0.756,2,1.062,3,0.404,4,0.349,5,0.349,7,0.609,8,0.035,9,0.725,56,2.652,59,1.855,60,1.529,67,0.404,68,0.106,69,0.026,70,0.026,181,2.935,201,1.529,220,3.633,221,4.684,222,3.633,223,3.013,224,4.684,225,3.013,226,2.605,227,3.633,228,3.633,229,3.633,230,3.633,231,3.633,232,3.633,233,3.633,234,3.633,235,3.633]],["title/injectables/JwtStrategy.html",[106,0.991,119,1.753]],["body/injectables/JwtStrategy.html",[3,0.29,4,0.251,5,0.251,7,0.585,8,0.036,9,0.521,18,0.576,19,1.479,28,2.437,36,1.436,59,1.333,67,0.29,68,0.076,69,0.021,70,0.021,77,0.576,78,1.731,81,1.093,83,1.209,84,1.197,88,1.91,106,1.197,107,1.333,119,2.118,123,3.882,124,1.479,128,1.654,135,2.683,138,2.166,146,2.118,147,1.873,148,2.213,151,2.118,152,2.118,153,0.997,154,2.118,160,1.209,161,2.768,162,2.166,166,2.683,173,3.103,236,2.166,237,3.103,238,2.612,239,3.741,240,2.612,241,2.166,242,2.612,243,2.166,244,1.873,245,1.654,246,2.166,247,2.166,248,2.612,249,2.612,250,2.612,251,2.612,252,2.612,253,2.612,254,2.612,255,2.612,256,2.612]],["title/injectables/LocalStrategy.html",[106,0.991,257,2.221]],["body/injectables/LocalStrategy.html",[3,0.316,4,0.273,5,0.273,7,0.58,8,0.035,9,0.567,18,1.092,19,1.609,22,1.609,26,1.609,28,2.337,36,1.091,47,1.902,67,0.316,68,0.083,69,0.022,70,0.022,77,0.626,78,1.838,81,1.16,83,1.315,84,1.729,87,2.038,88,1.451,106,1.271,107,1.451,118,2.5,128,1.799,131,2.357,146,1.609,151,2.249,152,2.249,153,1.058,154,2.249,160,1.838,161,2.515,167,3.294,237,3.294,241,2.357,243,2.357,244,2.038,245,1.799,246,2.357,247,2.357,257,2.848,258,2.357,259,2.841,260,2.841,261,2.841,262,3.971,263,2.357,264,2.841,265,2.841,266,2.357]],["title/classes/LoggedUserOutput.html",[68,0.09,157,1.581]],["body/classes/LoggedUserOutput.html",[3,0.412,4,0.356,5,0.356,7,0.412,8,0.035,18,1.046,53,1.821,67,0.412,68,0.108,69,0.027,70,0.027,77,0.817,80,1.715,81,1.083,84,1.675,153,0.988,157,2.422,163,3.402,175,4.34,192,1.892,195,2.346,196,2.422,200,2.686,201,1.56,267,3.073,268,4.744,269,4.744,270,3.705,271,3.935]],["title/classes/LoginUserInput.html",[68,0.09,272,1.753]],["body/classes/LoginUserInput.html",[3,0.371,4,0.321,5,0.321,7,0.371,8,0.035,18,1.168,47,2.117,53,1.701,67,0.371,68,0.097,69,0.025,70,0.025,77,0.736,80,2.051,81,1.295,84,1.815,153,1.181,160,2.553,192,1.705,194,2.115,195,2.807,196,2.706,197,2.77,199,3.179,200,2.818,201,1.406,272,2.51,273,4.127,274,3.339]],["title/classes/UpdateUserInput.html",[68,0.09,275,1.753]],["body/classes/UpdateUserInput.html",[3,0.412,4,0.356,5,0.356,7,0.528,8,0.035,53,1.821,67,0.412,68,0.108,69,0.027,70,0.027,77,0.817,80,1.715,81,1.083,153,0.988,191,1.892,192,1.892,194,2.346,195,2.346,199,3.402,200,2.686,201,1.56,245,2.346,275,2.686,276,3.935,277,3.314,278,3.402,279,3.705,280,3.073,281,2.657,282,3.935,283,3.705,284,3.705]],["title/entities/User.html",[18,0.683,285,2.221]],["body/entities/User.html",[3,0.33,4,0.285,5,0.285,7,0.455,8,0.035,18,0.902,47,1.798,53,1.57,59,2.577,67,0.33,68,0.086,69,0.023,70,0.023,77,0.654,80,2.167,81,1.369,84,1.753,153,1.248,160,2.167,196,1.514,200,3.101,201,1.249,215,2.127,245,1.878,271,3.393,277,2.966,285,2.934,286,2.46,287,4.091,288,4.188,289,2.966,290,2.966,291,4.091,292,2.966,293,2.966,294,2.966,295,4.091,296,4.683,297,2.966,298,2.127,299,2.966,300,2.966,301,4.091]],["title/modules/UsersModule.html",[0,0.5,96,1.581]],["body/modules/UsersModule.html",[0,0.683,2,0.91,3,0.346,4,0.299,5,0.299,7,0.618,8,0.035,9,0.622,18,0.687,60,1.781,67,0.346,68,0.09,69,0.024,70,0.024,91,1.958,95,2.837,96,2.994,97,2.396,98,1.764,99,1.764,101,3.034,121,3.034,148,2.538,203,2.584,204,1.973,302,2.584,303,3.115,304,2.584,305,2.584,306,3.115,307,2.584,308,2.679,309,3.115,310,2.234,311,3.115,312,3.115]],["title/classes/UsersResolver.html",[68,0.09,308,1.961]],["body/classes/UsersResolver.html",[3,0.228,4,0.197,5,0.197,7,0.557,8,0.036,18,1.138,36,1.848,67,0.228,68,0.06,69,0.018,70,0.018,77,0.452,78,1.447,80,1.754,81,1.24,83,1.754,84,0.656,87,1.47,88,1.047,146,1.161,147,1.47,148,2.026,151,2.147,152,2.726,153,1.131,154,2.147,157,1.597,164,1.47,191,2.457,192,1.047,201,0.863,272,2.726,275,2.402,277,1.98,278,1.47,281,2.719,282,2.594,307,1.7,308,1.98,310,1.47,313,1.7,314,3.127,315,3.518,316,2.594,317,2.05,318,2.05,319,3.127,320,2.05,321,2.05,322,3.127,323,2.05,324,1.7,325,2.05,326,3.127,327,3.791,328,4.567,329,2.05,330,1.7,331,1.7,332,1.7,333,1.7,334,2.05,335,2.05,336,2.05,337,2.05,338,2.05,339,2.05,340,2.05,341,2.05,342,2.05,343,2.05,344,2.05]],["title/injectables/UsersService.html",[106,0.991,148,1.303]],["body/injectables/UsersService.html",[3,0.179,4,0.155,5,0.155,7,0.56,8,0.035,9,0.321,18,0.959,20,1.639,22,2.105,26,0.912,28,2.504,31,1.856,32,1.155,34,1.639,36,1.755,42,1.856,47,1.246,67,0.179,68,0.047,69,0.015,70,0.015,77,0.355,78,1.198,81,1.389,83,2.2,84,1.57,88,0.822,106,0.828,107,0.822,118,2.115,146,1.466,148,1.09,151,2.589,152,2.589,153,1.218,154,2.589,157,0.822,160,1.502,161,2.754,164,1.155,166,1.856,191,2.079,204,1.02,266,1.336,272,2.306,275,2.589,277,2.754,278,3.119,280,2.147,281,2.327,298,1.155,310,1.155,315,3.083,316,2.147,324,2.147,330,1.336,331,1.336,332,1.336,333,1.336,345,1.336,346,2.588,347,2.588,348,2.588,349,1.61,350,3.083,351,1.61,352,2.588,353,2.588,354,1.61,355,1.61,356,2.588,357,1.61,358,2.588,359,1.61,360,1.61,361,2.588,362,1.61,363,2.588,364,1.61,365,1.61,366,1.61,367,1.61,368,1.61,369,3.245,370,1.61,371,2.588,372,1.61,373,1.61,374,1.61,375,3.245,376,1.61,377,1.61,378,1.61,379,1.61,380,1.61,381,1.61,382,1.61,383,1.61,384,1.61]],["title/coverage.html",[385,3.022]],["body/coverage.html",[5,0.279,6,2.086,8,0.034,18,0.89,23,2.086,26,1.647,68,0.158,69,0.023,70,0.023,73,1.842,74,1.842,76,2.412,85,1.485,106,1.683,108,2.412,118,1.346,119,1.647,143,2.412,148,1.224,153,0.775,157,1.485,163,2.086,191,1.485,193,2.412,194,2.935,236,2.412,257,2.086,258,2.412,267,2.412,272,1.647,273,2.412,275,1.647,276,2.412,285,2.086,286,3.347,308,1.842,313,2.412,345,2.412,385,2.086,386,2.908,387,2.908,388,2.908,389,6.078,390,5.006,391,2.908,392,4.634,393,4.035,394,5.006,395,2.412,396,2.908,397,2.412,398,2.908,399,2.908,400,2.908,401,2.908]],["title/dependencies.html",[91,1.722,402,2.15]],["body/dependencies.html",[8,0.036,9,0.609,10,2.531,15,2.531,17,2.531,20,1.932,69,0.023,70,0.023,91,1.412,124,1.728,126,2.188,128,1.932,135,2.188,201,1.285,204,1.932,223,2.531,225,2.531,226,2.188,244,3.409,263,2.531,298,2.188,403,3.051,404,4.171,405,4.171,406,4.171,407,5.35,408,3.051,409,3.051,410,3.051,411,5.109,412,3.051,413,3.051,414,3.051,415,3.051,416,3.051,417,3.051,418,3.051,419,3.051,420,3.051,421,3.051,422,3.051,423,3.051,424,3.051,425,3.051,426,3.051,427,3.051,428,3.051,429,3.051,430,3.051,431,3.051,432,3.051,433,3.051,434,3.051,435,3.051,436,3.051]],["title/miscellaneous/functions.html",[437,1.641,438,3.086]],["body/miscellaneous/functions.html",[8,0.031,69,0.031,70,0.031,77,1.02,395,3.839,397,4.79,437,2.931,438,3.839,439,4.628]],["title/index.html",[77,0.571,440,2.592,441,2.592]],["body/index.html",[4,0.292,8,0.034,69,0.023,70,0.023,196,1.551,218,2.521,226,2.179,350,2.521,385,2.179,442,3.039,443,3.039,444,4.16,445,3.039,446,3.039,447,3.039,448,3.039,449,3.039,450,4.743,451,3.039,452,3.039,453,3.039,454,5.648,455,3.039,456,3.039,457,3.039,458,5.516,459,3.039,460,3.039,461,4.16,462,3.039,463,3.039,464,3.039,465,4.16,466,4.16,467,3.039,468,3.039,469,3.039,470,4.16,471,4.16,472,3.039,473,3.039,474,3.039,475,3.039,476,3.039,477,2.521,478,3.039,479,3.039,480,3.039,481,3.039,482,3.039,483,3.039,484,3.039,485,3.039,486,3.039,487,3.039,488,2.521,489,3.039,490,3.039,491,3.039,492,3.039,493,3.039,494,3.039,495,2.521]],["title/modules.html",[2,1.231]],["body/modules.html",[1,2.174,2,1.122,8,0.027,69,0.027,70,0.027,71,2.174,90,2.431,95,1.96,96,1.96,112,2.174,117,1.777,180,2.174,181,2.174,477,4.636,496,5.764,497,5.764,498,6.105,499,5.589,500,5.589]],["title/overview.html",[501,3.495]],["body/overview.html",[1,2.997,2,0.708,8,0.034,69,0.02,70,0.02,71,2.373,73,1.535,85,2.139,90,3.562,91,1.64,92,2.011,93,2.011,94,2.011,95,3.086,96,2.77,97,2.007,98,1.373,99,1.373,107,1.238,112,3.324,113,2.011,114,2.011,115,2.011,116,2.011,117,2.511,118,2.449,119,2.373,148,2.228,177,2.011,178,2.011,179,2.011,180,2.997,181,2.997,192,1.238,215,1.739,302,2.011,304,2.011,305,2.011,501,2.011,502,2.424,503,3.545,504,2.424,505,2.424]],["title/properties.html",[53,1.428,402,2.15]],["body/properties.html",[8,0.034,53,1.744,69,0.03,70,0.03,196,2.319,488,3.768,495,3.768,506,4.543,507,4.543,508,4.543]],["title/miscellaneous/variables.html",[437,1.641,509,3.086]],["body/miscellaneous/variables.html",[6,1.985,8,0.036,12,2.295,14,2.295,18,0.61,22,2.207,23,2.795,24,2.295,25,2.295,26,1.567,27,3.233,28,1.99,29,4.063,30,3.743,31,3.513,32,2.795,33,4.063,34,2.468,35,3.233,36,1.496,37,3.233,38,2.295,39,3.233,40,2.295,41,2.295,42,1.985,43,2.295,44,2.295,45,2.295,46,2.295,47,1.496,48,2.295,49,2.795,50,2.295,51,2.295,52,2.295,53,1.062,54,2.295,55,2.295,56,2.555,57,2.295,58,2.295,59,1.413,69,0.022,70,0.022,77,0.61,153,0.738,288,2.295,437,1.752,509,2.295,510,2.767,511,2.767]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":507,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":503,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":32,"title":{},"body":{"modules/AdminModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.1.7",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["16.6.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["3.11.1",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":504,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":505,"title":{},"body":{"overview.html":{}}}],["6.7.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["6000s",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.2.0",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":502,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":269,"title":{},"body":{"classes/LoggedUserOutput.html":{}}}],["accesstoken",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoggedUserOutput.html":{}}}],["action",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["actions",{"_index":25,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["admin",{"_index":65,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":183,"title":{},"body":{"modules/CommonModule.html":{}}}],["adminjs",{"_index":10,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["adminjs.registeradapter",{"_index":21,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminjs/express",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["adminjs/nestjs",{"_index":17,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["adminjs/typeorm",{"_index":15,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["adminjsoptions",{"_index":63,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminmodule",{"_index":1,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["amazing",{"_index":478,"title":{},"body":{"index.html":{}}}],["animals/animals.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["animalsmodule",{"_index":71,"title":{"modules/AnimalsModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["anyway",{"_index":44,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":225,"title":{},"body":{"modules/GraphqlModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":221,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["apollodriverconfig",{"_index":222,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["apolloserverpluginlandingpagelocaldefault",{"_index":224,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["app",{"_index":456,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":74,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":449,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":90,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":85,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":329,"title":{},"body":{"classes/UsersResolver.html":{}}}],["async",{"_index":28,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":184,"title":{},"body":{"modules/CommonModule.html":{}}}],["authmodule",{"_index":112,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":488,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":118,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":229,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["available",{"_index":497,"title":{},"body":{"modules.html":{}}}],["await",{"_index":34,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":479,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('email",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseentity",{"_index":295,"title":{},"body":{"entities/User.html":{}}}],["bcrypt",{"_index":20,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash",{"_index":35,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.hash(password",{"_index":370,"title":{},"body":{"injectables/UsersService.html":{}}}],["before",{"_index":27,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":499,"title":{},"body":{"modules.html":{}}}],["building",{"_index":445,"title":{},"body":{"index.html":{}}}],["change",{"_index":217,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["class",{"_index":68,"title":{"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{}},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":192,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":177,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":179,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":178,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":302,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":304,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":303,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":305,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":296,"title":{},"body":{"entities/User.html":{}}}],["common/common.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":95,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["config/config.module",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{}}}],["configmodule",{"_index":117,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('db_host",{"_index":208,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_name",{"_index":214,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_password",{"_index":213,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_port",{"_index":210,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_username",{"_index":212,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('jwt_secret",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["const",{"_index":22,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":259,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{}}}],["constructor(usersrepository",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{}}}],["controller",{"_index":73,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["core",{"_index":227,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["coverage",{"_index":385,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":280,"title":{},"body":{"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["create(createuserinput",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser",{"_index":314,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserinput",{"_index":334,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(createuserinput",{"_index":318,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":191,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserinput.email",{"_index":373,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserinput.password",{"_index":369,"title":{},"body":{"injectables/UsersService.html":{}}}],["database",{"_index":13,"title":{},"body":{"modules/AdminModule.html":{},"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":185,"title":{},"body":{"modules/CommonModule.html":{}}}],["databasemodule",{"_index":180,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["debug",{"_index":232,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["decorators",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":288,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":49,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":196,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"entities/User.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":457,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":51,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["driver",{"_index":231,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["dto/create",{"_index":330,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/logged",{"_index":332,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":333,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":331,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":467,"title":{},"body":{"index.html":{}}}],["edit",{"_index":37,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":446,"title":{},"body":{"index.html":{}}}],["email",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserInput.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":215,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":310,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":285,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["example",{"_index":291,"title":{},"body":{"entities/User.html":{}}}],["expiresin",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":67,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{}}}],["extractjwt",{"_index":242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":59,"title":{},"body":{"modules/AdminModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":200,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{}}}],["field()@column({nullable",{"_index":287,"title":{},"body":{"entities/User.html":{}}}],["field(undefined",{"_index":195,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["field({description",{"_index":290,"title":{},"body":{"entities/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter",{"_index":58,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":315,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(@args('id",{"_index":339,"title":{},"body":{"classes/UsersResolver.html":{}}}],["findone(id",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["formidable",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["framework",{"_index":444,"title":{},"body":{"index.html":{}}}],["function",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":438,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":268,"title":{},"body":{"classes/LoggedUserOutput.html":{}}}],["generateusercredential",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateusercredential(user",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["gethello",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":440,"title":{"index.html":{}},"body":{}}],["graph",{"_index":496,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["graphql/graphql.module",{"_index":186,"title":{},"body":{"modules/CommonModule.html":{}}}],["graphqlmodule",{"_index":181,"title":{"modules/GraphqlModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/GraphqlModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule.forroot",{"_index":228,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["grow",{"_index":474,"title":{},"body":{"index.html":{}}}],["hash",{"_index":39,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":485,"title":{},"body":{"index.html":{}}}],["host",{"_index":207,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["https://nestjs.com",{"_index":492,"title":{},"body":{"index.html":{}}}],["id",{"_index":277,"title":{},"body":{"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":77,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{}}}],["inject(forwardref",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":106,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":368,"title":{},"body":{"injectables/UsersService.html":{}}}],["inputtype",{"_index":199,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["installation",{"_index":453,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":455,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":234,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["int",{"_index":282,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{}}}],["invalid",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":190,"title":{},"body":{"modules/ConfigModule.html":{}}}],["isvisible",{"_index":54,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":481,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":489,"title":{},"body":{"index.html":{}}}],["license",{"_index":495,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":471,"title":{},"body":{"index.html":{}}}],["list",{"_index":55,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":263,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localstrategy",{"_index":257,"title":{"injectables/LocalStrategy.html":{}},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["loggeduseroutput",{"_index":157,"title":{"classes/LoggedUserOutput.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoggedUserOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["loginuser",{"_index":316,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["loginuser(@args('logginuserinput",{"_index":337,"title":{},"body":{"classes/UsersResolver.html":{}}}],["loginuser(loginuserinput",{"_index":324,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["loginuserinput",{"_index":272,"title":{"classes/LoginUserInput.html":{}},"body":{"classes/LoginUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["loginuserinput.email",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserinput.password",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":70,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":437,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":470,"title":{},"body":{"index.html":{}}}],["mode",{"_index":461,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":484,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":328,"title":{},"body":{"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":319,"title":{},"body":{"classes/UsersResolver.html":{}}}],["myśliwiec",{"_index":490,"title":{},"body":{"index.html":{}}}],["name",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":38,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":450,"title":{},"body":{"index.html":{}}}],["nestadminmodule",{"_index":16,"title":{},"body":{"modules/AdminModule.html":{}}}],["nestadminmodule.createadminasync",{"_index":61,"title":{},"body":{"modules/AdminModule.html":{}}}],["nestconfigmodule",{"_index":188,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestconfigmodule.forroot",{"_index":189,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestframework",{"_index":494,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":223,"title":{},"body":{"modules/GraphqlModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":201,"title":{},"body":{"classes/CreateUserInput.html":{},"modules/GraphqlModule.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":204,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":26,"title":{},"body":{"modules/AdminModule.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":371,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":443,"title":{},"body":{"index.html":{}}}],["npm",{"_index":454,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["nullable",{"_index":301,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":278,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["objecttype",{"_index":271,"title":{},"body":{"classes/LoggedUserOutput.html":{},"entities/User.html":{}}}],["open",{"_index":472,"title":{},"body":{"index.html":{}}}],["optional",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":24,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":50,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":501,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":52,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":402,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":283,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["partialtype(createuserinput",{"_index":284,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["passport",{"_index":244,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":241,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":47,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserInput.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["passwordisvalid",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwords",{"_index":43,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["placeholder",{"_index":299,"title":{},"body":{"entities/User.html":{}}}],["placeholder)'})@primarygeneratedcolumn('uuid",{"_index":292,"title":{},"body":{"entities/User.html":{}}}],["playground",{"_index":233,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["please",{"_index":482,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":235,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["port",{"_index":209,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["post",{"_index":46,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["postgres",{"_index":206,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["present",{"_index":48,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":297,"title":{},"body":{"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":300,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":218,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["progressive",{"_index":442,"title":{},"body":{"index.html":{}}}],["project",{"_index":473,"title":{},"body":{"index.html":{}}}],["promise",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":53,"title":{"properties.html":{}},"body":{"modules/AdminModule.html":{},"classes/CreateUserInput.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["query",{"_index":327,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":321,"title":{},"body":{"classes/UsersResolver.html":{}}}],["read",{"_index":483,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["recordactionresponse",{"_index":11,"title":{},"body":{"modules/AdminModule.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":42,"title":{},"body":{"modules/AdminModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["remove(id",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["removes",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeuser(@args('id",{"_index":343,"title":{},"body":{"classes/UsersResolver.html":{}}}],["repository",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":29,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":45,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["request.payload.password",{"_index":33,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["request.payload?.password",{"_index":30,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":40,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":326,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resource",{"_index":14,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":66,"title":{},"body":{"modules/AdminModule.html":{}}}],["resourcewithoptions",{"_index":12,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":69,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":36,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":64,"title":{},"body":{"modules/AdminModule.html":{}}}],["run",{"_index":458,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":31,"title":{},"body":{"modules/AdminModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":447,"title":{},"body":{"index.html":{}}}],["schema.gql",{"_index":230,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["secret",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":226,"title":{},"body":{"modules/GraphqlModule.html":{},"dependencies.html":{},"index.html":{}}}],["session",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":57,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":448,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AdminModule.html":{},"modules/AnimalsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":476,"title":{},"body":{"index.html":{}}}],["src/.../admin.module.ts",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/animals/animals.module.ts",{"_index":72,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["src/app.controller.ts",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/admin/admin.module.ts",{"_index":6,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/auth/auth.module.ts",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/auth/auth.service",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/common/auth/auth.service.ts",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/common/auth/auth.service.ts:23",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/auth.service.ts:32",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/auth.service.ts:9",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/auth/strategies/jwt.strategy.ts",{"_index":236,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/common/auth/strategies/jwt.strategy.ts:27",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/auth/strategies/jwt.strategy.ts:9",{"_index":238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/auth/strategies/local.strategy.ts",{"_index":258,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/common/auth/strategies/local.strategy.ts:13",{"_index":261,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/auth/strategies/local.strategy.ts:8",{"_index":260,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/common.module",{"_index":311,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/common/common.module.ts",{"_index":182,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/config/config.module.ts",{"_index":187,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/common/database/database.module.ts",{"_index":202,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/common/graphql/graphql.module.ts",{"_index":220,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["src/main.ts",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":193,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/logged",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoggedUserOutput.html":{},"coverage.html":{}}}],["src/users/dto/login",{"_index":273,"title":{},"body":{"classes/LoginUserInput.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":276,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":19,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/entities/user.entity.ts",{"_index":286,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":289,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:23",{"_index":294,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":293,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.module",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":306,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":313,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:10",{"_index":317,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:14",{"_index":320,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:19",{"_index":323,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:24",{"_index":325,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/users/users.service.ts",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:38",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":462,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":463,"title":{},"body":{"index.html":{}}}],["started",{"_index":441,"title":{"index.html":{}},"body":{}}],["starter",{"_index":452,"title":{},"body":{"index.html":{}}}],["statements",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":486,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":243,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":477,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":500,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":219,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":466,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":469,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":468,"title":{},"body":{"index.html":{}}}],["tests",{"_index":465,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":475,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generateusercredential(user",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.authservice.validateuser",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.authservice.validateuser(email",{"_index":265,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersrepository.find",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save",{"_index":372,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserinput",{"_index":335,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall",{"_index":336,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(id",{"_index":340,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(validationpayload.email",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usersservice.loginuser(loginuserinput",{"_index":338,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.remove(id",{"_index":344,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(updateuserinput.id",{"_index":342,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":266,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["tiptap/prosemirror",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["todo",{"_index":216,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["touch",{"_index":487,"title":{},"body":{"index.html":{}}}],["true",{"_index":56,"title":{},"body":{"modules/AdminModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphqlModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":493,"title":{},"body":{"index.html":{}}}],["type",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"entities/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":298,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":203,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":312,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":205,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typescript",{"_index":451,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":262,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":464,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":508,"title":{},"body":{"properties.html":{}}}],["update",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(@args('updateuserinput",{"_index":341,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":275,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usefactory",{"_index":62,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["user",{"_index":18,"title":{"entities/User.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggedUserOutput.html":{},"classes/LoginUserInput.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.input",{"_index":281,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":194,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:6",{"_index":197,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/LoginUserInput.html":{}}}],["user.input.ts:7",{"_index":279,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:8",{"_index":274,"title":{},"body":{"classes/LoginUserInput.html":{}}}],["user.input.ts:9",{"_index":198,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.output",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.output.ts",{"_index":267,"title":{},"body":{"classes/LoggedUserOutput.html":{},"coverage.html":{}}}],["user.output.ts:6",{"_index":270,"title":{},"body":{"classes/LoggedUserOutput.html":{}}}],["user.password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":211,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usernamefield",{"_index":264,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userresource",{"_index":23,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":322,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.resolver",{"_index":309,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":307,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":96,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersresolver",{"_index":308,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":148,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":237,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(validationpayload",{"_index":252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":509,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":506,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":460,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":41,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["website",{"_index":491,"title":{},"body":{"index.html":{}}}],["world",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":480,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport AdminJS, { RecordActionResponse, ResourceWithOptions } from 'adminjs';\nimport { Database, Resource } from '@adminjs/typeorm';\nimport { AdminModule as NestAdminModule } from '@adminjs/nestjs';\nimport { User } from 'src/users/entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\nAdminJS.registerAdapter({ Database, Resource });\n\nconst userResource: ResourceWithOptions = {\n  resource: User,\n  options: {\n    actions: {\n      new: {\n        before: async (request) => {\n          if (request.payload?.password) {\n            const saltOrRounds = 10;\n            request.payload.password = await bcrypt.hash(\n              request.payload.password,\n              saltOrRounds,\n            );\n          }\n          return request;\n        },\n      },\n      edit: {\n        before: async (request) => {\n          // no need to hash on GET requests, we'll remove passwords there anyway\n          if (request.method === 'post') {\n            // hash only if password is present, delete otherwise\n            // so we don't overwrite it\n            if (request.payload?.password) {\n              const saltOrRounds = 10;\n              request.payload.password = await bcrypt.hash(\n                request.payload.password,\n                saltOrRounds,\n              );\n            } else {\n              delete request.payload?.password;\n            }\n          }\n          return request;\n        },\n      },\n    },\n    properties: {\n      password: {\n        isVisible: {\n          list: true,\n          show: true,\n          filter: false,\n          edit: true,\n        },\n      },\n    },\n  },\n};\n\n@Module({\n  imports: [\n    NestAdminModule.createAdminAsync({\n      useFactory: () => ({\n        adminJsOptions: {\n          rootPath: '/admin',\n          resources: [userResource],\n        },\n      }),\n    }),\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalsModule.html":{"url":"modules/AnimalsModule.html","title":"module - AnimalsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnimalsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/animals/animals.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AnimalsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AnimalsModule } from './animals/animals.module';\nimport { UsersModule } from './users/users.module';\nimport { CommonModule } from './common/common.module';\n\n@Module({\n  imports: [CommonModule, AnimalsModule, UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { ConfigModule } from '../config/config.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    forwardRef(() => UsersModule),\n    // PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '6000s' },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateUserCredential\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateUserCredential\n                        \n                    \n                \n            \n            \n                \ngenerateUserCredential(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/common/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoggedUserOutput\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/users/entities/user.entity';\nimport { UsersService } from 'src/users/users.service';\nimport * as bcrypt from 'bcrypt';\nimport { LoggedUserOutput } from 'src/users/dto/logged-user.output';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  // async validate(email: string, password: string): Promise {\n  //   const user = await this.usersService.findOneByEmail(email);\n  //   if (!user) return null;\n  //   const passwordIsValid = password === user.password;\n  //   return passwordIsValid ? user : null;\n  // }\n\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    if (!user) return null;\n    if (await bcrypt.compare(password, user.password)) {\n      delete user.password;\n      return user;\n    }\n  }\n\n  generateUserCredential(user: User): LoggedUserOutput {\n    const payload = {\n      email: user.email,\n    };\n    return {\n      accessToken: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAdminModule->CommonModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCommonModule -->\n\nAuthModule->CommonModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCommonModule -->\n\nConfigModule->CommonModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nCommonModule -->\n\nGraphqlModule->CommonModule\n\n\n\n\n\nAdminModule \n\nAdminModule \n\nAdminModule  -->\n\nCommonModule->AdminModule \n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nCommonModule->AuthModule \n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCommonModule->ConfigModule \n\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\nDatabaseModule  -->\n\nCommonModule->DatabaseModule \n\n\n\n\n\nGraphqlModule \n\nGraphqlModule \n\nGraphqlModule  -->\n\nCommonModule->GraphqlModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphqlModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphqlModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from './config/config.module';\nimport { DatabaseModule } from './database/database.module';\nimport { GraphqlModule } from './graphql/graphql.module';\n\n@Module({\n  imports: [\n    ConfigModule,\n    GraphqlModule,\n    DatabaseModule,\n    AuthModule,\n    AdminModule,\n  ],\n  exports: [\n    ConfigModule,\n    GraphqlModule,\n    DatabaseModule,\n    AuthModule,\n    AdminModule,\n  ],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule as NestConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    NestConfigModule.forRoot({\n      isGlobal: true,\n    }),\n  ],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'email of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class CreateUserInput {\n  @Field(() => String, { description: 'email of the user' })\n  email: string;\n\n  @Field(() => String, { description: 'password of the user' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/users/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DB_HOST'),\n        port: +configService.get('DB_PORT'),\n        username: configService.get('DB_USERNAME'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [User],\n        //TODO: Change in production to false\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlModule.html":{"url":"modules/GraphqlModule.html","title":"module - GraphqlModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/graphql/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloServerPluginLandingPageLocalDefault } from 'apollo-server-core';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'schema.gql',\n      driver: ApolloDriver,\n      debug: true,\n      playground: false,\n      installSubscriptionHandlers: true,\n      plugins: [ApolloServerPluginLandingPageLocalDefault],\n    }),\n  ],\n})\nexport class GraphqlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from 'src/users/entities/user.entity';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n  // async validate(validationPayload: {\n  //   email: string;\n  //   sub: string;\n  // }): Promise {\n  //   return this.usersService.findOneByEmail(validationPayload.email);\n  // }\n\n  async validate(payload: any): Promise {\n    return { payload, userId: payload.sub };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = this.authService.validateUser(email, password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggedUserOutput.html":{"url":"classes/LoggedUserOutput.html","title":"class - LoggedUserOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggedUserOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/logged-user.output.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Generated access_token of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/logged-user.output.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class LoggedUserOutput {\n  @Field(() => String, { description: 'Generated access_token of the user' })\n  accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserInput.html":{"url":"classes/LoginUserInput.html","title":"class - LoginUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'email of user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.input.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.input.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class LoginUserInput {\n  @Field(() => String, { description: 'email of user' })\n  email: string;\n  @Field(() => String, { description: 'password of the user' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserInput } from './create-user.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdateUserInput extends PartialType(CreateUserInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column({nullable: false, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({description: 'Example field (placeholder)'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column({nullable: false, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ObjectType, Field } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@ObjectType()\n@Entity()\nexport class User extends BaseEntity {\n  @Field({ description: 'Example field (placeholder)' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Field()\n  @Column({\n    nullable: false,\n    default: '',\n  })\n  email: string;\n\n  @Field()\n  @Column({\n    nullable: false,\n    default: '',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersResolver } from './users.resolver';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [CommonModule, TypeOrmModule.forFeature([User])],\n  providers: [UsersResolver, UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findAll\n                            \n                            \n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'users'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(loginUserInput: LoginUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserInput\n                                    \n                                                LoginUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args, Int } from '@nestjs/graphql';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\nimport { LoggedUserOutput } from './dto/logged-user.output';\nimport { LoginUserInput } from './dto/login-user.input';\n\n@Resolver(() => User)\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Mutation(() => User)\n  createUser(@Args('createUserInput') createUserInput: CreateUserInput) {\n    return this.usersService.create(createUserInput);\n  }\n\n  @Query(() => [User], { name: 'users' })\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Mutation(() => LoggedUserOutput)\n  loginUser(@Args('logginUserInput') loginUserInput: LoginUserInput) {\n    return this.usersService.loginUser(loginUserInput);\n  }\n\n  // @Query(() => User, { name: 'user' })\n  // findOne(@Args('id') id: string) {\n  //   return this.usersService.findOne(id);\n  // }\n\n  // @Mutation(() => User)\n  // updateUser(@Args('updateUserInput') updateUserInput: UpdateUserInput) {\n  //   return this.usersService.update(updateUserInput.id, updateUserInput);\n  // }\n\n  // @Mutation(() => User)\n  // removeUser(@Args('id', { type: () => Int }) id: number) {\n  //   return this.usersService.remove(id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserInput: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(loginUserInput: LoginUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserInput\n                                    \n                                                LoginUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserInput: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserInput\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthService } from 'src/common/auth/auth.service';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { LoggedUserOutput } from './dto/logged-user.output';\nimport { LoginUserInput } from './dto/login-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User) private usersRepository: Repository,\n    private readonly authService: AuthService,\n  ) {}\n\n  async create(createUserInput: CreateUserInput): Promise {\n    const saltOrRounds = 10;\n    const password = createUserInput.password;\n    createUserInput.password = await bcrypt.hash(password, saltOrRounds);\n    const newUser = this.usersRepository.save({\n      email: createUserInput.email,\n      password: createUserInput.password,\n    });\n    return newUser;\n  }\n\n  findAll() {\n    return this.usersRepository.find();\n  }\n\n  findOne(id: string) {\n    return `This action returns a #${id} user`;\n  }\n\n  async findOneByEmail(email: string): Promise {\n    return this.usersRepository.findOne({ where: { email } });\n  }\n\n  async loginUser(loginUserInput: LoginUserInput): Promise {\n    const user = await this.authService.validateUser(\n      loginUserInput.email,\n      loginUserInput.password,\n    );\n    if (!user) {\n      throw new BadRequestException('Email or password are invalid');\n    }\n\n    return this.authService.generateUserCredential(user);\n  }\n\n  update(id: number, updateUserInput: UpdateUserInput) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/admin/admin.module.ts\n            \n            variable\n            userResource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/logged-user.output.ts\n            \n            class\n            LoggedUserOutput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.input.ts\n            \n            class\n            LoginUserInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @adminjs/express : ^5.0.1\n        \n            @adminjs/nestjs : ^5.0.1\n        \n            @adminjs/typeorm : ^4.0.0\n        \n            @nestjs/apollo : ^10.1.7\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/graphql : ^10.1.7\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @tiptap/prosemirror-tables : ^1.1.3\n        \n            adminjs : ^6.7.0\n        \n            apollo-server-express : ^3.11.1\n        \n            bcrypt : ^5.1.0\n        \n            express-formidable : ^1.2.0\n        \n            express-session : ^1.17.3\n        \n            graphql : ^16.6.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AnimalsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nAdminModule \n\nAdminModule \n\nAdminModule  -->\n\nCommonModule->AdminModule \n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nCommonModule->AuthModule \n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCommonModule->ConfigModule \n\n\n\n\n\nDatabaseModule \n\nDatabaseModule \n\nDatabaseModule  -->\n\nCommonModule->DatabaseModule \n\n\n\n\n\nGraphqlModule \n\nGraphqlModule \n\nGraphqlModule  -->\n\nCommonModule->GraphqlModule \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCommonModule -->\n\nConfigModule->CommonModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nCommonModule -->\n\nAuthModule->CommonModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nAdminModule\n\nAdminModule\n\nCommonModule -->\n\nAdminModule->CommonModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nCommonModule -->\n\nGraphqlModule->CommonModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            userResource   (src/.../admin.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/admin/admin.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userResource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResourceWithOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  resource: User,\n  options: {\n    actions: {\n      new: {\n        before: async (request) => {\n          if (request.payload?.password) {\n            const saltOrRounds = 10;\n            request.payload.password = await bcrypt.hash(\n              request.payload.password,\n              saltOrRounds,\n            );\n          }\n          return request;\n        },\n      },\n      edit: {\n        before: async (request) => {\n          // no need to hash on GET requests, we'll remove passwords there anyway\n          if (request.method === 'post') {\n            // hash only if password is present, delete otherwise\n            // so we don't overwrite it\n            if (request.payload?.password) {\n              const saltOrRounds = 10;\n              request.payload.password = await bcrypt.hash(\n                request.payload.password,\n                saltOrRounds,\n              );\n            } else {\n              delete request.payload?.password;\n            }\n          }\n          return request;\n        },\n      },\n    },\n    properties: {\n      password: {\n        isVisible: {\n          list: true,\n          show: true,\n          filter: false,\n          edit: true,\n        },\n      },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
